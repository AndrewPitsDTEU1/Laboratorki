import numpy as np 

a =  m_sqr_arr = np.array([[2, 3, 1], [-1, 1, 0], [1, 2, -1]]) 

b = m_sqr_arr = np.array([[1, 2, 1], [0, 1, 2], [3, 1, 1]]) 

c = a.dot(b) 

k = b.dot(a) 

p = c - k 

print(p) 

№2 
import numpy as np 

a =  m_sqr_arr = np.array([[-1, 0, 2], [0, 1, 0], [1, 2, -1]]) 

print(a) 

print(a**2) 

№3  
import numpy as np 

a =  m_sqr_arr = np.array([[5, 8, -4], [6, 9, -5], [4, 7, -3]]) 

b = m_sqr_arr = np.array([[3, 2, 5], [4, -1, 3], [9, 6, 5]]) 

p = a.dot(b) 

print(p) 

№4
import numpy as np 

a =  m_sqr_arr = np.array([[0, 2, -0], [3, 4, -5], [6, 7, 8]]) 

a_det = np.linalg.det(a) #Визначник матриці 

print(format(a_det, '9g')) 

№.5  
import numpy as np 

a =  m_sqr_arr = np.array([[2, 3, 4, 1], [1, 2, 3, 4], [3, 4, 1, 2], [4, 1, 2, 3]]) 

a_det = np.linalg.det(a)  

print(format(a_det, '9g')) 

№6 
import numpy as np 

a =  m_sqr_arr = np.array([[2, 5, 7], [6, 3, 4], [5, -2, -3]]) 

a_inv = np.linalg.inv(a) 

print(format(a_inv)) 

№7 
import numpy as np 

a =  m_sqr_arr = np.array([[1, -1, 3, 4], [0, -1, 2, 1], [1, 1, -1, 2], [2, 3, -5, 3]]) 

rank = np.linalg.matrix_rank(a) 

print(rank) 

№8 
Задача №2.  Створіть прямокутну матрицю A з N рядками та стовпцями M з випадкових елементів. 
Знайдіть найнижче значення серед середніх значень для кожного рядка матриці. 

 import numpy as np 

matrix_1 = np.random.randint(0,100,(6,6)) 

print(matrix_1) 

print(np.min(matrix_1, axis=1)) 





